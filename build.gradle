apply plugin: 'java'
apply plugin: 'maven'

defaultTasks 'clean', 'javadoc', 'jar'

group = 'wjw.psqueue.client'
version = "1.0.4"
ext {
  buildName = "PSQueueClient"
}

repositories {
  mavenLocal()
  //maven{ url "http://SVN:8081/nexus/content/groups/public"}
  maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }  //优先使用阿里的镜像
  mavenCentral()
  jcenter()
}

dependencies {
  compile files("lib/EasyFastJson-2.7.2.jar")
  compile group: 'junit', name: 'junit', version: '4.12'
}


sourceSets {
  sourceCompatibility = 1.6
  targetCompatibility = 1.6
  main {
    java {
      srcDirs = ['src']
    }
    resources {
      srcDirs = ['src']
    }
  }
}

jar {
  manifest {
    attributes 'Built-By': 'wjw465150@gmail.com',
    'Build-Name': "${project.buildName}",
    'Build-Version': "${project.version}"
  } 
  excludes = ['**/test/**']
}

test {  //禁止执行:Test Task
  onlyIf { Task task ->
    return false
  }
}

javadoc {
  destinationDir = file("${projectDir}/api-doc")
  title = "PSQueueClient"
  includes = ['wjw/psqueue/client/*', 'wjw/psqueue/client/jmx/*', 'wjw/psqueue/msg/*']
}

uploadArchives {
  repositories.mavenDeployer {
    def mvnUsername = project.findProperty("mvnUsername") ?: ""
    def mvnPassword = project.findProperty("mvnPassword") ?: ""
  
    repository(url: "http://svn:8081/nexus/content/repositories/thirdparty/") {
      authentication(userName: mvnUsername, password: mvnPassword)
    }
    
    pom.groupId = "${project.group}"
    pom.artifactId = "${project.buildName}"
    pom.version = "${project.version}"
    pom.project {
      name project.name
      packaging 'jar'
      description 'Psq Java Client'
      
      licenses {
        license {
          name 'The Apache Software License, Version 2.0'
          url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          distribution 'Psq Java Client'
        }
      }
    
      developers {
        developer {
          id 'wangjunwei'
          name 'Wang JunWei'
        }
      }
    }
  }
}

//为项目生成**.jar/**-javadoc.jar/**-sources.jar
task javadocJar(type: Jar, dependsOn: [javadoc]) {
    classifier = 'javadoc'
    from 'api-doc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

